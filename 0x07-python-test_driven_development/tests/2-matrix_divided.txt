============================
``2-matrix_divided`` module
============================

``matrix_divided`` divides all elements of a matrix using the ``/`` operator.

Import function from module:
       >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
       
	----------
       |Test cases|
        ----------

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -3)
    	[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]
	
    	>>> matrix_divided([[3]], 3)
    	[[1.0]]

    	>>> matrix_divided([[8, 1, 5], [6, 6, 6]], float('inf'))
    	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

     	>>> matrix_divided([[7, 6, 5], [4, 3, 2]], float('nan'))
    	[[nan, nan, nan], [nan, nan, nan]]

	
    	>>> matrix_divided([[2, 4, 8], [1, 2, 3]], 0)
    	Traceback (most recent call last):
    	     ...
    	ZeroDivisionError: division by zero
	
	
    	>>> matrix_divided(none, 3)
    	Traceback (most recent call last):
    	     ...
	NameError: name 'none' is not defined


    	>>> matrix_divided([[]], 3)
    	Traceback (most recent call last):
    	     ...
    	TypeError: matrix must be a matrix (list of lists) of integers/floats


    	>>> matrix_divided([["none", 2, 3], [4, 5, 6]], 3)
    	Traceback (most recent call last):
	     ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix_divided([[2, 4, 8], [1, 3]], 2)
	Traceback (most recent call last):
    	     ...
    	TypeError: Each row of the matrix must have the same size


    	>>> matrix_divided([[], [], []], 10)
    	Traceback (most recent call last):
    	     ...
    	TypeError: matrix must be a matrix (list of lists) of integers/floats


    	>>> matrix_divided("foo", 1)
    	Traceback (most recent call last):
    	     ...
    	TypeError: matrix must be a matrix (list of lists) of integers/floats


    	>>> matrix_divided([], 1)
    	Traceback (most recent call last):
    	     ...
    	TypeError: matrix must be a matrix (list of lists) of integers/floats


    	>>> matrix_divided([[2]], "foo")
    	Traceback (most recent call last):
    	     ...
    	TypeError: div must be a number


	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "string")
    	Traceback (most recent call last):
    	     ...
    	TypeError: div must be a number


	>>> matrix_divided(3)
    	Traceback (most recent call last):
    	     ...
    	TypeError: matrix_divided() missing 1 required positional argument: 'div'

    	>>> matrix_divided()
    	Traceback (most recent call last):
    	     ...
    	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
